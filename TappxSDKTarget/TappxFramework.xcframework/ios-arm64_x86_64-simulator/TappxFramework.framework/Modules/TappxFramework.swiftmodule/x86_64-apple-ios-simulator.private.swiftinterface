// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 6 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -module-name TappxFramework
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
@_exported import TappxFramework
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_Concurrency.MainActor @preconcurrency public struct UITappxBannerView : View, Sendable {
  @_Concurrency.MainActor @preconcurrency public init(tappxKey: String? = nil, extraTappxKey: String? = nil, size: TappxBannerSize, animation: TappxAnimation, onEvent: ((TappxBannerEvent) -> Void)? = nil)
  @_Concurrency.MainActor @preconcurrency public var body: some View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s14TappxFramework17UITappxBannerViewV4bodyQrvp", 0) __
}
@frozen public enum TappxBannerEvent : Sendable {
  case didClose(bannerView: TappxBannerView)
  case didPress(bannerView: TappxBannerView)
  case didFinishLoad(bannerView: TappxBannerView)
  case didFail(bannerView: TappxBannerView, error: TappxErrorAd)
}
